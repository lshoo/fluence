(function() {var implementors = {};
implementors["aquamarine"] = [{"text":"impl Freeze for AquamarineBackend","synthetic":true,"types":[]},{"text":"impl Freeze for AquamarineApi","synthetic":true,"types":[]},{"text":"impl Freeze for AwaitedParticle","synthetic":true,"types":[]},{"text":"impl Freeze for AwaitedEffects","synthetic":true,"types":[]},{"text":"impl Freeze for VmPoolConfig","synthetic":true,"types":[]},{"text":"impl Freeze for SendParticle","synthetic":true,"types":[]},{"text":"impl Freeze for StepperEffects","synthetic":true,"types":[]},{"text":"impl Freeze for Plumber","synthetic":true,"types":[]}];
implementors["connection_pool"] = [{"text":"impl Freeze for ConnectionPoolInlet","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionPoolApi","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionPoolBehaviour","synthetic":true,"types":[]},{"text":"impl Freeze for Contact","synthetic":true,"types":[]},{"text":"impl Freeze for LifecycleEvent","synthetic":true,"types":[]}];
implementors["fluence_client"] = [{"text":"impl Freeze for Transport","synthetic":true,"types":[]},{"text":"impl Freeze for Client","synthetic":true,"types":[]},{"text":"impl Freeze for ClientCommand","synthetic":true,"types":[]},{"text":"impl Freeze for ClientEvent","synthetic":true,"types":[]}];
implementors["fluence_libp2p"] = [{"text":"impl Freeze for RandomPeerId","synthetic":true,"types":[]}];
implementors["host_closure"] = [{"text":"impl Freeze for Args","synthetic":true,"types":[]},{"text":"impl Freeze for ArgsError","synthetic":true,"types":[]},{"text":"impl Freeze for JError","synthetic":true,"types":[]}];
implementors["kademlia"] = [{"text":"impl Freeze for KademliaApiInlet","synthetic":true,"types":[]},{"text":"impl Freeze for KademliaApi","synthetic":true,"types":[]},{"text":"impl Freeze for KademliaConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Kademlia","synthetic":true,"types":[]},{"text":"impl Freeze for KademliaError","synthetic":true,"types":[]}];
implementors["particle_closures"] = [{"text":"impl&lt;C&gt; Freeze for HostClosures&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NodeInfo","synthetic":true,"types":[]}];
implementors["particle_modules"] = [{"text":"impl Freeze for Blueprint","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleError","synthetic":true,"types":[]}];
implementors["particle_node"] = [{"text":"impl !Freeze for Node","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkBehaviour","synthetic":true,"types":[]}];
implementors["particle_protocol"] = [{"text":"impl Freeze for CompletionChannel","synthetic":true,"types":[]},{"text":"impl Freeze for HandlerMessage","synthetic":true,"types":[]},{"text":"impl Freeze for ProtocolConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Particle","synthetic":true,"types":[]}];
implementors["particle_providers"] = [{"text":"impl Freeze for Provider","synthetic":true,"types":[]},{"text":"impl Freeze for ProviderRepository","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ProviderError&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["particle_services"] = [{"text":"impl Freeze for ParticleAppServices","synthetic":true,"types":[]}];
implementors["server_config"] = [{"text":"impl Freeze for AppServicesConfig","synthetic":true,"types":[]},{"text":"impl Freeze for BootstrapConfig","synthetic":true,"types":[]},{"text":"impl Freeze for FluenceConfig","synthetic":true,"types":[]},{"text":"impl Freeze for NodeConfig","synthetic":true,"types":[]},{"text":"impl Freeze for KademliaConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ListenConfig","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkConfig","synthetic":true,"types":[]},{"text":"impl Freeze for ServicesConfig","synthetic":true,"types":[]}];
implementors["test_utils"] = [{"text":"impl Freeze for ConnectedClient","synthetic":true,"types":[]},{"text":"impl Freeze for Instruction","synthetic":true,"types":[]},{"text":"impl Freeze for CreatedSwarm","synthetic":true,"types":[]},{"text":"impl Freeze for Trust","synthetic":true,"types":[]},{"text":"impl Freeze for SwarmConfig","synthetic":true,"types":[]},{"text":"impl Freeze for CreatedService","synthetic":true,"types":[]}];
implementors["waiting_queues"] = [{"text":"impl Freeze for Enqueued","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for WaitingQueues&lt;K, V&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()