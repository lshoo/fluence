(function() {var implementors = {};
implementors["aquamarine"] = [{"text":"impl !RefUnwindSafe for AquamarineBackend","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AquamarineApi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AwaitedParticle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AwaitedEffects","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VmPoolConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendParticle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StepperEffects","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Plumber","synthetic":true,"types":[]}];
implementors["connection_pool"] = [{"text":"impl !RefUnwindSafe for ConnectionPoolInlet","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectionPoolApi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectionPoolBehaviour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Contact","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LifecycleEvent","synthetic":true,"types":[]}];
implementors["fluence_client"] = [{"text":"impl RefUnwindSafe for Transport","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientEvent","synthetic":true,"types":[]}];
implementors["fluence_libp2p"] = [{"text":"impl RefUnwindSafe for RandomPeerId","synthetic":true,"types":[]}];
implementors["host_closure"] = [{"text":"impl RefUnwindSafe for Args","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ArgsError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JError","synthetic":true,"types":[]}];
implementors["kademlia"] = [{"text":"impl !RefUnwindSafe for KademliaApiInlet","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for KademliaApi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KademliaConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Kademlia","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KademliaError","synthetic":true,"types":[]}];
implementors["particle_closures"] = [{"text":"impl&lt;C&gt; !RefUnwindSafe for HostClosures&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeInfo","synthetic":true,"types":[]}];
implementors["particle_modules"] = [{"text":"impl RefUnwindSafe for Blueprint","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ModuleError","synthetic":true,"types":[]}];
implementors["particle_node"] = [{"text":"impl !RefUnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NetworkBehaviour","synthetic":true,"types":[]}];
implementors["particle_protocol"] = [{"text":"impl !RefUnwindSafe for CompletionChannel","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HandlerMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtocolConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Particle","synthetic":true,"types":[]}];
implementors["particle_providers"] = [{"text":"impl RefUnwindSafe for Provider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProviderRepository","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ProviderError&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["particle_services"] = [{"text":"impl !RefUnwindSafe for ParticleAppServices","synthetic":true,"types":[]}];
implementors["server_config"] = [{"text":"impl RefUnwindSafe for AppServicesConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BootstrapConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FluenceConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KademliaConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListenConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NetworkConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ServicesConfig","synthetic":true,"types":[]}];
implementors["test_utils"] = [{"text":"impl !RefUnwindSafe for ConnectedClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instruction","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CreatedSwarm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Trust","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwarmConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreatedService","synthetic":true,"types":[]}];
implementors["waiting_queues"] = [{"text":"impl RefUnwindSafe for Enqueued","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for WaitingQueues&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()